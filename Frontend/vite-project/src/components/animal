import React, { useState, useEffect } from 'react';
import { mascotaService } from '../services/mascota.service';
import { sexosService } from '../services/sexo.service';
import { tamanoService } from '../services/tamano.service';
import { tipoAnimalService } from '../services/tipoAnimal.service';

const RegistroAnimal = () => {
  const [sexos, setSexos] = useState([]);
  const [tamanos, setTamanos] = useState([]);
  const [tiposAnimal, setTiposAnimal] = useState([]);
  
  const [vecino, setVecino] = useState(''); // Cambiar a string para permitir un campo de entrada
  const [error, setError] = useState(null);
  const [nombre, setNombre] = useState('');
  const [descripcion, setDescripcion] = useState('');
  const [edad, setEdad] = useState('');
  const [sexo, setSexo] = useState('');
  const [tamano, setTamano] = useState('');
  const [tipoAnimal, setTipoAnimal] = useState('');

  const handleSubmit = async (event) => {
    event.preventDefault();
  
    const nuevaMascota = {
      edad: parseInt(edad), // Asegúrate de que sea un número
      nombre,
      descripcion,
      sexo, // Esto debe ser la cadena correspondiente
      tipoAnimal, // Esto también debe ser la cadena correspondiente
      tamaño: tamano, // Esto debe ser la cadena correspondiente
      vecino: parseInt(vecino) // Convertir a número si es necesario
    };
  
    try {
      await mascotaService.Grabar(nuevaMascota);
      alert("Mascota registrada con éxito");
      // Limpiar el formulario
      setNombre('');
      setDescripcion('');
      setEdad('');
      setSexo('');
      setTamano('');
      setTipoAnimal('');
      setVecino('');
    } catch (error) {
      setError("Error al registrar la mascota. Por favor, inténtelo de nuevo.");
      console.error("Error al registrar la mascota:", error.response ? error.response.data : error);
    }
  };
  
  useEffect(() => {
    const fetchSexos = async () => {
      try {
        const data = await sexosService.Buscar();
        setSexos(data.result);
      } catch (error) {
        setError("Error al cargar los sexos");
      }
    };
  
    const fetchTamanos = async () => {
      try {
        const data = await tamanoService.Buscar();
        setTamanos(data.result);
      } catch (error) {
        setError("Error al cargar los tamaños");
      }
    };
  
    const fetchTiposAnimal = async () => {
      try {
        const data = await tipoAnimalService.Buscar();
        setTiposAnimal(data.result);
      } catch (error) {
        setError("Error al cargar los tipos de animales");
      }
    };
  
    fetchSexos();
    fetchTamanos();
    fetchTiposAnimal();
  }, []);

  return (
    <div className="container mt-4">
      <h2 className="maven-pro-title">INGRESAR DATOS DE ANIMAL</h2>
      <form onSubmit={handleSubmit} className="maven-pro-body">
        <div className="mb-3">
          <label htmlFor="nombre" className="form-label">Nombre</label>
          <input
            type="text"
            className="form-control"
            id="nombre"
            placeholder="Escriba el nombre del animal (opcional)"
            value={nombre}
            onChange={(e) => setNombre(e.target.value)}
          />
        </div>
        <div className="mb-3">
          <label htmlFor="descripcion" className="form-label">Descripción</label>
          <textarea
            className="form-control"
            id="descripcion"
            rows="4"
            placeholder="Escriba una descripción (opcional)"
            value={descripcion}
            onChange={(e) => setDescripcion(e.target.value)}
          />
        </div>
        <div className="mb-3">
          <label htmlFor="edad" className="form-label">Edad</label>
          <input
            type="number"
            className="form-control"
            id="edad"
            placeholder="Ingrese la edad aproximada"
            value={edad}
            onChange={(e) => setEdad(e.target.value)}
            required
          />
        </div>
        <div className="mb-3">
          <label htmlFor="tipoAnimal" className="form-label">Tipo de Animal</label>
          <select
            className="form-select"
            id="tipoAnimal"
            value={tipoAnimal}
            onChange={(e) => setTipoAnimal(e.target.value)}
            required
          >
            <option value="" disabled>Seleccionar Tipo de animal</option>
            {tiposAnimal.map((tipo) => (
              <option key={tipo.idTipo} value={tipo.tipoAnimal}>
                {tipo.tipoAnimal}
              </option>
            ))}
          </select>
        </div>
        <div className="mb-3">
          <label htmlFor="sexo" className="form-label">Sexo</label>
          <select
            className="form-select"
            id="sexo"
            value={sexo}
            onChange={(e) => setSexo(e.target.value)}
            required
          >
            <option value="" disabled>Seleccionar sexo</option>
            {sexos.map(sexo => (
              <option key={sexo.idSexos} value={sexo.sexoTipo}> {/* Cambia esto a sexo.sexoTipo */}
                {sexo.sexoTipo}
              </option>
            ))}
          </select>
        </div>
        <div className="mb-3">
          <label htmlFor="tamano" className="form-label">Tamaño</label>
          <select
            className="form-select"
            id="tamano"
            value={tamano}
            onChange={(e) => setTamano(e.target.value)}
            required
          >
            <option value="" disabled>Seleccionar tamaño</option>
            {tamanos.map((tamano) => (
              <option key={tamano.idTamaño} value={tamano.tamañoTipo}>
                {tamano.tamañoTipo}
              </option>
            ))}
          </select>
        </div>
        <div className="mb-3">
          <label htmlFor="vecino" className="form-label">Número de Vecino</label>
          <input
            type="number"
            className="form-control"
            id="vecino"
            value={vecino}
            onChange={(e) => setVecino(e.target.value)}
            required
          />
        </div>
        <div className="d-flex justify-content-between">
          <button type="submit" className="btn btn-primary ms-auto confir">Confirmar</button>
        </div>
      </form>
    </div>
  );
};

export default RegistroAnimal;
